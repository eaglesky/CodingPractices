Operating System Review

Operating System Concepts(9th Edition)

1. Memory Management
	1.1. Memory layouts
	1.2. Segmentation and Paging

2. Processes
	2.1. General concept of process -- its definition. State, PCB, and context switch.
	2.2. Operations on processes: fork(), wait(), exec()
	2.3. Interprocess Communication -- shared memory and message passing. Motivations
	and examples. 

3. Threads.
	3.1. 

4. Process Synchronization.
	4.1. Race condition: A situation like this, where several processes access and manipulate the same data concurrently and the outcome of the execution depends on the particular order in which the access takes place, is called a race condition.

5. File System(Refer to Maurice Bach's The Design of UNIX Operating System)
	5.1. Free disk blocks lay out --- linked list of disk blocks that contain free block
	numbers. The blocks that store free block numbers can be used for storing actual
	data, so although initially there are many blocks used for storing free block numbers,
	they don't really reduce the data capacity.
	5.2. The maximum number of inodes is set for many UNIX systems when the file system
	is first created. If the free inodes are in the form of linked list, they might be
	able to use the data blocks so that there won't be limit on inode number.

* More threads do not mean better performance:
1. Context switch.
2. Memory usage of stacks. This also limits the number of threads you can have. In
Java, the stack size for each thread is specified by -XX:ThreadStackSize.
https://dzone.com/articles/java-what-limit-number-threads
3. Network bandwidth could be the network after you add too many threads. Current
max network bandwidth = 10 Gbps
More: http://etherealmind.com/basics-difference-bandwidth-speed/


Questions:
1. The advantage of multi-processing in Chrome browser over a single process with
multiple threads?
