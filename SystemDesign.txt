Concepts.

CS75 video:

1. Web hosting service:
A web hosting service is a type of Internet hosting service that allows individuals
and organizations to make their website accessible via the World Wide Web. Web hosts
are companies that provide space on a server owned or leased for use by clients, as
well as providing Internet connectivity, typically in a data center.
Example: Bluehost, Dreamhost, Go Daddy, Host Gator, pair Networks.

2. Different types of web hosting service:
Shared, dedicated, VPS, Cloud.
https://hostingfacts.com/different-types-of-web-hosting/.

3. Vertical scaling:
Better hardware, like SSD.

4. Horizontal scaling:

5. Load balacing:
The DNS server can return the ip of load balancer instead of a server, and let the
load balancer decide which server the request should be sent to.
Load balancing strategies:
(1) Based on load of the server(how busy it is, the cpu usage).
(2) Store different types of files on different servers, and use the suffix of url
to discreminate them. 
(3) Round robin. Example: BIND(the most widely used Domain Name System (DNS) software
on the Internet) uses this strategy to resolve a host name --- same host name, but
different ip each time. The drawback of this strategy is that one or few server could
always receive requests that require most computation resource, making them much busier
than the rest. Another thing that can show it is a bad strategy is DNS caching, which
exists on the user's computer(maintained by the OS and browser). This caching is a
map of host name and ip address that will expire(clear) after a certain amount of
time(TTL). It is only used for speeding up the response time 
(https://www.lifewire.com/introduction-to-domain-name-system-817512). So if an user
keeps doing expensive work, it will always be done on the same server during TTL and
that server will be always busy. Therefore instead of relying on the DNS server to
do the load balancing, it is better to let the DNS server return the ip of the load
balancer.

Server-side sessions(http://stackoverflow.com/questions/3804209/what-are-sessions-how-do-they-work)
could cause problems for load balancing, because one session for a user is only stored
on one server. Solution: store all the sessions on a dedicated session server, or
the load balancer itself, which can be accessed by all servers. However what if the
server is down?
We could try using RAID to achieve data redundancy to some degree, but this is still
not a good solution, as it is possible that the whole server is down. A better way
to deal with it is to use multiple servers, which requires some syncing process.
Sticky session can also be a solution here, which can be implemented by storing an
id on the user's cookie and let LB to remember the mapping of that id to the ip of
the server the session belongs to.

Load Balancer choices:
Software:
ELB(AWS Elastic Load Balancing), HAProxy, LVS(Linux Virtual Server, http://www.linuxvirtualserver.org/whatis.html)
Hardware:
Barracuda, Cisco, Citrix, F5..


6. Caching.
(1) File based caching. Storeing a new file(html file) when new data is entered, like
what is done by Craigslist. The upside of this approach is that the html file doesn't
have to be regenerated everytime it's visited. The downside of it is due to the redundancy,
it is hard to change the common style of the pages. And it could use too much space.


Knowledge:
* Computer Protocols- TCP/IP, POP, SMTP, HTTP, FTP and More
http://vlaurie.com/computers2/Articles/protocol.htm


* TCP vs UDP
https://www.howtogeek.com/190014/htg-explains-what-is-the-difference-between-tcp-and-udp/
UDP is less reliable but much faster, so it is preferable for transmitting time-critical
data, like live video stream and online game data.


* Cookies: Http Cookies and third-party cookies.
Drawbacks of cookies:https://en.wikipedia.org/wiki/HTTP_cookie#Drawbacks_of_cookies


* Three ways of managing sessions:
https://www.youtube.com/watch?v=32UGARg8AzU
Cookies
URL rewriting, Hidden fields
https://www.youtube.com/watch?v=xGAVFsLfn2w
https://www.youtube.com/watch?v=Pv3FST7OcvQ


* RAID(Redundant array of inexpensive disks):
It is a data storage virtualization technology that combines multiple physical disk
drive components into a single logical unit for the purposes of data redundancy,
performance improvement, or both.

RAID0: Uses data striping(technique of segmenting logically sequential data, such
as a file, so that consecutive segments are stored on different physical storage
devices) to perform concurrent read and write, so that the performance could be improved
by the number of disks. No data redundancy involved.

RAID1: Uses data mirroring to implement redundancy. Typically two idendical hard drives.
Write throughput is always slower because every drive must be updated, and the slowest
drive limits the write performance. 

RAID10: A combination of above.
